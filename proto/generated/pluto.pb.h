/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_PLUTO_PLUTO_PB_H_INCLUDED
#define PB_PLUTO_PLUTO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* todo: make this bitflags, make this support "inferred" */
typedef enum _pluto_TrackedStatus {
    pluto_TrackedStatus_UNTRACKED = 0,
    pluto_TrackedStatus_TRACKED = 1
} pluto_TrackedStatus;

/* Struct definitions */
typedef struct _pluto_Quaternion {
    /* note: if bandwidth is a concern, you can drop the `w` and recover it on the ther end because */
    float w;
    float x;
    float y;
    float z;
} pluto_Quaternion;

typedef struct _pluto_Vec3 {
    float x;
    float y;
    float z;
} pluto_Vec3;

typedef struct _pluto_Pose {
    bool has_position;
    pluto_Vec3 position;
    bool has_orientation;
    pluto_Quaternion orientation;
} pluto_Pose;

typedef struct _pluto_TrackingMessage {
    bool has_P_localSpace_viewSpace;
    pluto_Pose P_localSpace_viewSpace;
    bool has_P_viewSpace_view0;
    pluto_Pose P_viewSpace_view0; /* Left view */
    bool has_P_viewSpace_view1;
    pluto_Pose P_viewSpace_view1; /* Right view */
    bool has_P_local_controller_grip_left;
    pluto_Pose P_local_controller_grip_left;
    bool has_controller_aim_left;
    pluto_Pose controller_aim_left;
    bool has_controller_grip_right;
    pluto_Pose controller_grip_right;
    bool has_controller_aim_right;
    pluto_Pose controller_aim_right;
    int64_t timestamp;
    int64_t sequence_idx;
} pluto_TrackingMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _pluto_TrackedStatus_MIN pluto_TrackedStatus_UNTRACKED
#define _pluto_TrackedStatus_MAX pluto_TrackedStatus_TRACKED
#define _pluto_TrackedStatus_ARRAYSIZE ((pluto_TrackedStatus)(pluto_TrackedStatus_TRACKED+1))






/* Initializer values for message structs */
#define pluto_Quaternion_init_default            {0, 0, 0, 0}
#define pluto_Vec3_init_default                  {0, 0, 0}
#define pluto_Pose_init_default                  {false, pluto_Vec3_init_default, false, pluto_Quaternion_init_default}
#define pluto_TrackingMessage_init_default       {false, pluto_Pose_init_default, false, pluto_Pose_init_default, false, pluto_Pose_init_default, false, pluto_Pose_init_default, false, pluto_Pose_init_default, false, pluto_Pose_init_default, false, pluto_Pose_init_default, 0, 0}
#define pluto_Quaternion_init_zero               {0, 0, 0, 0}
#define pluto_Vec3_init_zero                     {0, 0, 0}
#define pluto_Pose_init_zero                     {false, pluto_Vec3_init_zero, false, pluto_Quaternion_init_zero}
#define pluto_TrackingMessage_init_zero          {false, pluto_Pose_init_zero, false, pluto_Pose_init_zero, false, pluto_Pose_init_zero, false, pluto_Pose_init_zero, false, pluto_Pose_init_zero, false, pluto_Pose_init_zero, false, pluto_Pose_init_zero, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pluto_Quaternion_w_tag                   1
#define pluto_Quaternion_x_tag                   2
#define pluto_Quaternion_y_tag                   3
#define pluto_Quaternion_z_tag                   4
#define pluto_Vec3_x_tag                         1
#define pluto_Vec3_y_tag                         2
#define pluto_Vec3_z_tag                         3
#define pluto_Pose_position_tag                  1
#define pluto_Pose_orientation_tag               2
#define pluto_TrackingMessage_P_localSpace_viewSpace_tag 1
#define pluto_TrackingMessage_P_viewSpace_view0_tag 2
#define pluto_TrackingMessage_P_viewSpace_view1_tag 3
#define pluto_TrackingMessage_P_local_controller_grip_left_tag 4
#define pluto_TrackingMessage_controller_aim_left_tag 5
#define pluto_TrackingMessage_controller_grip_right_tag 6
#define pluto_TrackingMessage_controller_aim_right_tag 7
#define pluto_TrackingMessage_timestamp_tag      8
#define pluto_TrackingMessage_sequence_idx_tag   9

/* Struct field encoding specification for nanopb */
#define pluto_Quaternion_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    w,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 2) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 3) \
X(a, STATIC,   SINGULAR, FLOAT,    z,                 4)
#define pluto_Quaternion_CALLBACK NULL
#define pluto_Quaternion_DEFAULT NULL

#define pluto_Vec3_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    x,                 1) \
X(a, STATIC,   SINGULAR, FLOAT,    y,                 2) \
X(a, STATIC,   SINGULAR, FLOAT,    z,                 3)
#define pluto_Vec3_CALLBACK NULL
#define pluto_Vec3_DEFAULT NULL

#define pluto_Pose_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  position,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  orientation,       2)
#define pluto_Pose_CALLBACK NULL
#define pluto_Pose_DEFAULT NULL
#define pluto_Pose_position_MSGTYPE pluto_Vec3
#define pluto_Pose_orientation_MSGTYPE pluto_Quaternion

#define pluto_TrackingMessage_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  P_localSpace_viewSpace,   1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  P_viewSpace_view0,   2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  P_viewSpace_view1,   3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  P_local_controller_grip_left,   4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  controller_aim_left,   5) \
X(a, STATIC,   OPTIONAL, MESSAGE,  controller_grip_right,   6) \
X(a, STATIC,   OPTIONAL, MESSAGE,  controller_aim_right,   7) \
X(a, STATIC,   SINGULAR, INT64,    timestamp,         8) \
X(a, STATIC,   SINGULAR, INT64,    sequence_idx,      9)
#define pluto_TrackingMessage_CALLBACK NULL
#define pluto_TrackingMessage_DEFAULT NULL
#define pluto_TrackingMessage_P_localSpace_viewSpace_MSGTYPE pluto_Pose
#define pluto_TrackingMessage_P_viewSpace_view0_MSGTYPE pluto_Pose
#define pluto_TrackingMessage_P_viewSpace_view1_MSGTYPE pluto_Pose
#define pluto_TrackingMessage_P_local_controller_grip_left_MSGTYPE pluto_Pose
#define pluto_TrackingMessage_controller_aim_left_MSGTYPE pluto_Pose
#define pluto_TrackingMessage_controller_grip_right_MSGTYPE pluto_Pose
#define pluto_TrackingMessage_controller_aim_right_MSGTYPE pluto_Pose

extern const pb_msgdesc_t pluto_Quaternion_msg;
extern const pb_msgdesc_t pluto_Vec3_msg;
extern const pb_msgdesc_t pluto_Pose_msg;
extern const pb_msgdesc_t pluto_TrackingMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pluto_Quaternion_fields &pluto_Quaternion_msg
#define pluto_Vec3_fields &pluto_Vec3_msg
#define pluto_Pose_fields &pluto_Pose_msg
#define pluto_TrackingMessage_fields &pluto_TrackingMessage_msg

/* Maximum encoded size of messages (where known) */
#define pluto_Pose_size                          39
#define pluto_Quaternion_size                    20
#define pluto_TrackingMessage_size               309
#define pluto_Vec3_size                          15

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
