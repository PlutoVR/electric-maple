plugins {
    id 'com.android.application'
}

android {
    compileSdk 30


    defaultConfig {
//        todo
//        python {
//            pip {
//                install "nanopb"
//            }
//        }
        applicationId "com.plutovr.plutosphere.webrtc_client"
        minSdkVersion 26
        // Version 30 breaks loader
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                arguments '-DANDROID_STL=c++_shared', "-DEIGEN3_INCLUDE_DIR=${project.eigenIncludeDir}" //, "-DGST_BASE_DIR=${project.gstreamerBaseDir}", "-DGST_ARCH_DIR=${project.gstreamerArchDir}"

            }
            ndk {
                abiFilters 'arm64-v8a'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "../CMakeLists.txt"
        }
    }
    buildFeatures {
        prefab true
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    namespace 'com.plutovr.plutosphere.webrtc_client'
    ndkVersion project.ndkVersion
}

dependencies {
    implementation 'org.khronos.openxr:openxr_loader_for_android:1.0.27'
    implementation "androidx.annotation:annotation:1.6.0"
}

def gstBase = project.findProperty('gstreamerBaseDir')
def gstArch = project.findProperty('gstreamerArchDir')
if (gstArch) {
    android.defaultConfig.externalNativeBuild.cmake.arguments += "-DGST_ARCH_DIR=${gstArch}"
    android.sourceSets.main.java.srcDirs += "${gstArch}/share/gst-android/ndk-build/androidmedia"
} else if (gstBase) {
    android.defaultConfig.externalNativeBuild.cmake.arguments += "-DGST_BASE_DIR=${gstBase}"
    android.sourceSets.main.java.srcDirs += "${gstBase}/arm64/share/gst-android/ndk-build/androidmedia"
}
//
//ext {
//    // If you are building on Windows, you will need to explicitly set eigenIncludeDir in your
//    // local.properties file since the default value provided below only makes sense on *nix
//    eigenIncludeDir = project.findProperty('eigenIncludeDir') ?: '/usr/include/eigen3'
//}
